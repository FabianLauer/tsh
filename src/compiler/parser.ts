import * as generatedParser from './generatedParser.js'
import * as ast from '../ast'

interface IGeneratedParser {
	yy: any
	parse(input: string): any
}

/**
 * This is the parser generated by JISON.
 * We keep this private.
 */
const parser: IGeneratedParser = (<any>generatedParser).parser

for (const typeName in ast) {
	parser.yy[typeName] = (<any>ast)[typeName]
}

parser.yy.createToken = function (rawSource: string) {
	return new ast.Token(rawSource)
}


parser.yy.getVarDeclModifierByKeyword = function(keyword: 'let' | 'const') {
	if (keyword === 'let') {
		return ast.VarDeclModifier.Let
	} else if (keyword === 'const') {
		return ast.VarDeclModifier.Const
	} else {
		throw new Error(`Parsing Error: "${keyword}" is not a legal var decl keyword.`)
	}
}


export function parse(input: string): any {
	return parser.parse(input)
}

